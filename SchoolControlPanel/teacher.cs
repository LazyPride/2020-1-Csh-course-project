//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchoolControlPanel
{
    using System;
    using System.Collections.Generic;
    
    public partial class teacher
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public teacher()
        {
            this.student_group = new HashSet<student_group>();
            this.subjects = new HashSet<subject>();
        }
    
        public int id { get; set; }
        public string first_name { get; set; }
        public string last_name { get; set; }
        public string third_name { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<student_group> student_group { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<subject> subjects { get; set; }
        public override string ToString()
        {
            string str = String.Format("{0} {1} {2}", first_name, last_name, third_name);

            if (student_group.Count > 0)
            {
                str += " (Classrom teacher for";
            }

            foreach (student_group s in student_group)
            {
                if (s.id != -1)
                {
                    str += " " + s.name;
                }
            }

            if (student_group.Count > 0)
            {
                str += ") ";
            }

            if (subjects.Count > 0)
            {
                str += " (Teaches: ";
            }

            foreach (subject s in subjects)
            {
                if (s.id != -1)
                {
                    str += " " + s.name;
                }
            }

            if (subjects.Count > 0)
            {
                str += ")";
            }

            return str;
        }
    }
}
